version: '3.9'
services:
  api:
    build:
      context: ../
      dockerfile: infra/docker/node-api.Dockerfile
    environment:
      - PORT=3001
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - LIVEKIT_WS_URL=${LIVEKIT_WS_URL}
      - LIVEKIT_HOST=${LIVEKIT_HOST}
    expose:
      - "3001"
    restart: unless-stopped
    networks:
      - talkie-net

  web:
    build:
      context: ../
      dockerfile: infra/docker/node-web.Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://${API_TALKIE_DOMAIN}
    env_file:
      - .env
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - talkie-net

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - talkie-net

  livekit:
    image: livekit/livekit-server:latest
    command: ["--config", "/etc/livekit/livekit.yaml"]
    env_file: .env
    environment:
      LIVEKIT_KEYS: '${LIVEKIT_API_KEY}: ${LIVEKIT_API_SECRET}'
    volumes:
      - ./livekit/livekit.yaml:/etc/livekit/livekit.yaml:ro
    expose:
      - "7880"
      - "7881"
    ports:
      - "46.62.140.249:7880:7880/tcp"
      - "46.62.140.249:7881:7881/tcp"
      - "46.62.140.249:7881:7881/udp"
      - "46.62.140.249:50000-50200:50000-50200/udp" # SFU media (rtc.port_range_start/end)
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - talkie-net

  coturn:
    image: coturn/coturn:4.6.2
    command: ["sh", "/usr/local/bin/coturn-entrypoint.sh"]
    volumes:
      - ./docker/coturn-entrypoint.sh:/usr/local/bin/coturn-entrypoint.sh:ro
      - caddy_data:/data:ro
    ports:
      - "65.109.242.173:3478:3478/udp"
      - "65.109.242.173:3478:3478/tcp"
      - "65.109.242.173:5349:5349/tcp"
      - "65.109.242.173:29000-29200:29000-29200/udp"
    restart: unless-stopped
    depends_on:
      - caddy
    networks:
      - talkie-net

  caddy:
    image: caddy:2.8
    depends_on:
      - web
      - api
      - livekit
    env_file: .env
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
    ports:
      - "46.62.140.249:80:80/tcp"
      - "65.109.242.173:80:80/tcp" # Allow Caddy to solve ACME for the TURN domain
      - "46.62.140.249:443:443/tcp"
      - "46.62.140.249:443:443/udp"
    restart: unless-stopped
    networks:
      - talkie-net

volumes:
  caddy_data:


networks:
  talkie-net:
    driver: bridge
